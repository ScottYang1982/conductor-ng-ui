/**
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { SubWorkflowParams } from './subWorkflowParams';
import { Task } from './task';
import { TaskDef } from './taskDef';

export interface WorkflowTask { 
    name: string;
    taskReferenceName: string;
    description?: string;
    inputParameters?: { [key: string]: any; };
    type?: string;
    dynamicTaskNameParam?: string;
    caseValueParam?: string;
    caseExpression?: string;
    scriptExpression?: string;
    decisionCases?: { [key: string]: Array<WorkflowTask>; };
    dynamicForkJoinTasksParam?: string;
    dynamicForkTasksParam?: string;
    dynamicForkTasksInputParamName?: string;
    defaultCase?: Array<WorkflowTask>;
    forkTasks?: Array<Array<WorkflowTask>>;
    startDelay?: number;
    subWorkflowParam?: SubWorkflowParams;
    joinOn?: Array<string>;
    sink?: string;
    optional?: boolean;
    taskDefinition?: TaskDef;
    rateLimited?: boolean;
    defaultExclusiveJoinTask?: Array<string>;
    asyncComplete?: boolean;
    loopCondition?: string;
    loopOver?: Array<WorkflowTask>;
    retryCount?: number;
    workflowTaskType?: WorkflowTask.WorkflowTaskTypeEnum;
    task? : Task
}
export namespace WorkflowTask {
    export type WorkflowTaskTypeEnum = 'SIMPLE' | 'DYNAMIC' | 'FORK_JOIN' | 'FORK_JOIN_DYNAMIC' | 'DECISION' | 'JOIN' | 'DO_WHILE' | 'SUB_WORKFLOW' | 'EVENT' | 'WAIT' | 'USER_DEFINED' | 'HTTP' | 'LAMBDA' | 'EXCLUSIVE_JOIN' | 'TERMINATE' | 'KAFKA_PUBLISH' | 'JSON_JQ_TRANSFORM' | 'SET_VARIABLE';
    export const WorkflowTaskTypeEnum = {
        SIMPLE: 'SIMPLE' as WorkflowTaskTypeEnum,
        DYNAMIC: 'DYNAMIC' as WorkflowTaskTypeEnum,
        FORKJOIN: 'FORK_JOIN' as WorkflowTaskTypeEnum,
        FORKJOINDYNAMIC: 'FORK_JOIN_DYNAMIC' as WorkflowTaskTypeEnum,
        DECISION: 'DECISION' as WorkflowTaskTypeEnum,
        JOIN: 'JOIN' as WorkflowTaskTypeEnum,
        DOWHILE: 'DO_WHILE' as WorkflowTaskTypeEnum,
        SUBWORKFLOW: 'SUB_WORKFLOW' as WorkflowTaskTypeEnum,
        EVENT: 'EVENT' as WorkflowTaskTypeEnum,
        WAIT: 'WAIT' as WorkflowTaskTypeEnum,
        USERDEFINED: 'USER_DEFINED' as WorkflowTaskTypeEnum,
        HTTP: 'HTTP' as WorkflowTaskTypeEnum,
        LAMBDA: 'LAMBDA' as WorkflowTaskTypeEnum,
        EXCLUSIVEJOIN: 'EXCLUSIVE_JOIN' as WorkflowTaskTypeEnum,
        TERMINATE: 'TERMINATE' as WorkflowTaskTypeEnum,
        KAFKAPUBLISH: 'KAFKA_PUBLISH' as WorkflowTaskTypeEnum,
        JSONJQTRANSFORM: 'JSON_JQ_TRANSFORM' as WorkflowTaskTypeEnum,
        SETVARIABLE: 'SET_VARIABLE' as WorkflowTaskTypeEnum
    };
}